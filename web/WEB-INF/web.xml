<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--<welcome-file-list>-->
    <!--<welcome-file>index.jsp</welcome-file>-->
<!--</welcome-file-list>-->
    <!-- 截取文件 -->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.*</url-pattern>-->
    <!--</servlet-mapping>-->

    <!-- spring的配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- spring mvc核心：分发servlet -->
    <servlet>
        <servlet-name>mvc-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- spring mvc的配置文件 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc-dispatcher</servlet-name>
        <url-pattern>/</url-pattern><!--而"/"很多人理解成不能拦截带扩展名的，这种理解是错误的！它其实也能拦截“.js”，“.css”，".png"等静态资源的访问。-->
    </servlet-mapping>
    <!--<servlet-mapping>-->
        <!--<servlet-name>mvc-dispatcher</servlet-name>-->
        <!--<url-pattern>*.jsp</url-pattern>&lt;!&ndash;支持访问以.jsp为后缀的路径请求映射&ndash;&gt;-->
    <!--</servlet-mapping>-->
    <!--配置编码过滤器-->
    <welcome-file-list>
        <welcome-file>/WEB-INF/jsp/signin.jsp</welcome-file>
    </welcome-file-list>
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 检查用户是否登录过的web.xml配置 -->
    <!--<filter>-->
        <!--<filter-name>AuthFilter</filter-name>-->
        <!--<filter-class>com.jdlink.controller.AuthFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>AuthFilter</filter-name>-->
        <!--<url-pattern>/SVSP/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--设置登陆保护时间为30分钟-->
    <!--<session-config>-->
        <!--<session-timeout>30</session-timeout>-->
    <!--</session-config>-->

</web-app>